program: gnn_fiedler_approx/algebraic_connectivity_script.py
name: batchsize_sweep_100_dropout
method: bayes  # Bayesian works for small number of continuous parameters.
metric:
  goal: minimize
  name: val_loss
parameters:
  architecture:
    value: GraphSAGE
  hidden_channels:
    value: 32
  gnn_layers:
    value: 5
  mlp_layers:
    value: 2
  dropout:
    distribution: q_uniform
    q: 0.05
    min: 0.0
    max: 1.0
  activation:
    value: tanh
  pool:
    value: softmax
  jk:
    value: cat
  optimizer:
    value: adam
  learning_rate:
    distribution: log_uniform_values
    min: 0.00001
    max: 0.5
  batch_size:
    value: "100%"
  epochs:
    value: 20000
  # model_kwargs:
  #   parameters:
  #     aggregators:
  #       value: [min, max, mean, std]
  #     scalers:
  #       value: [identity, amplification, attenuation]
  selected_features:
    values:
      - [degree, degree_centrality, core_number, triangles, clustering, close_centrality]
command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--eval-type"
  - "basic"
  - "--eval-target"
  - "best"


