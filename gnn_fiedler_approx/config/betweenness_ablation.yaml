program: algebraic_connectivity_script.py
name: betweenness_ablation
method: grid  # Bayesian works for small number of continuous parameters.
metric:
  goal: minimize
  name: test_loss
parameters:
  architecture:
    values: [GraphSAGE]
  hidden_channels:
    values: [32]
  num_layers:
    values: [5]
  dropout:
    values: [0.0]
  activation:
    values: [relu, tanh]
  aggr:
    values: [mean, max]
  optimizer:
    value: adam
  learning_rate:
    values: [0.01]
  epochs:
    value: 1000
  features:
    values:
      - [degree, degree_centrality, betweenness_centrality]
      - [degree, degree_centrality, core_number, triangles, clustering, close_centrality]
      - [degree, degree_centrality, core_number, triangles, clustering, close_centrality, betweenness_centrality]
early_terminate:
  type: hyperband
  eta: 3
  min_iter: 300
command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--eval-type"
  - "basic"
  - "--eval-target"
  - "best"


