program: gnn_fiedler_approx/algebraic_connectivity_script.py
name: norm_layers
method: grid  # Bayesian works for small number of continuous parameters.
metric:
  goal: minimize
  name: val_loss
parameters:
## Model configuration
  architecture:
    value: GraphSAGE
  hidden_channels:
    value: 32
  gnn_layers:
    value: 5
  mlp_layers:
    value: 2
  # dropout:
  #   value: 0.0
  activation:
    values: [tanh, relu]
  pool:
    values: [softmax, max]
  norm:
    values: [null, batch, layer_node, layer_graph, instance, graph]
  jk:
    value: cat
## Training configuration
  optimizer:
    value: adam
  # learning_rate:
  #   value: 0.001
  batch_size:
    values: [32, 256, "100%"]
  iterations:
    value: 100_000
## Dataset configuration
  selected_features:
    values:
      - [degree, degree_centrality, core_number, triangles, clustering, close_centrality]
  transform:
    values: [null, normalize_features]

command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--eval-type"
  - "basic"
  - "--eval-target"
  - "best"