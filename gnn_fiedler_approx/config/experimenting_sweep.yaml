program: gnn_fiedler_approx/algebraic_connectivity_script.py
name: pre_scaler
method: grid  # Bayesian works for small number of continuous parameters.
metric:
  goal: minimize
  name: val_loss
parameters:
  architecture:
    values: [GraphSAGE, GIN, GAT]
  hidden_channels:
    value: 32
  gnn_layers:
    value: 5
  mlp_layers:
    value: 2
  dropout:
    value: 0.0
  activation:
    values: [tanh, relu]
  pool:
    values: [softmax, max]
  optimizer:
    value: adam
  learning_rate:
    values: [0.001, 0.0005, 0.0001]
  batch_size:
    value: 256
  epochs:
    value: 200
  jk:
    value: cat
  model_kwargs:
    parameters:
      pre_scaler:
        values: [True, False]
  selected_features:
    values:
      - [degree, degree_centrality, core_number, triangles, clustering, close_centrality]

command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--eval-type"
  - "basic"
  - "--eval-target"
  - "best"


