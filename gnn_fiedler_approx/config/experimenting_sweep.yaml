program: gnn_fiedler_approx/algebraic_connectivity_script.py
name: PNA
method: grid  # Bayesian works for small number of continuous parameters.
metric:
  goal: minimize
  name: test_loss
parameters:
  architecture:
    values: [PNA]
  hidden_channels:
    values: [32]
  gnn_layers:
    values: [3, 5]
  mlp_layers:
    value: 2
  dropout:
    value: 0.0
  activation:
    values: [tanh, relu]
  pool:
    values: [max, s2s, mean, min]
  optimizer:
    value: adam
  learning_rate:
    values: [0.01, 0.001]
  epochs:
    value: 2000
  jk:
    values: [cat, none]
  model_kwargs:
    parameters:
      aggregators:
        value: [min, max, mean, std]
      scalers:
        value: [identity, amplification, attenuation]

command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--eval-type"
  - "basic"
  - "--eval-target"
  - "best"


